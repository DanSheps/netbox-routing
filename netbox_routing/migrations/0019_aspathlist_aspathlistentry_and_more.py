# Generated by Django 5.2b1 on 2025-07-28 21:02

import django.db.models.deletion
import django.db.models.functions.text
import netbox.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('extras', '0129_fix_script_paths'),
        ('netbox_routing', '0018_communities'),
    ]

    operations = [
        migrations.CreateModel(
            name='ASPathList',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                (
                    'custom_field_data',
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=utilities.json.CustomFieldJSONEncoder,
                    ),
                ),
                ('description', models.CharField(blank=True, max_length=200)),
                ('comments', models.TextField(blank=True)),
                ('name', models.CharField(max_length=255)),
                (
                    'tags',
                    taggit.managers.TaggableManager(
                        through='extras.TaggedItem', to='extras.Tag'
                    ),
                ),
            ],
            options={
                'verbose_name': 'AS Path Lists',
                'ordering': ['name', 'pk'],
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ASPathListEntry',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False
                    ),
                ),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                (
                    'custom_field_data',
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=utilities.json.CustomFieldJSONEncoder,
                    ),
                ),
                ('description', models.CharField(blank=True, max_length=200)),
                ('comments', models.TextField(blank=True)),
                ('sequence', models.PositiveSmallIntegerField()),
                ('action', models.CharField(max_length=6)),
                ('pattern', models.CharField(max_length=255)),
                (
                    'as_path_list',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='entries',
                        to='netbox_routing.aspathlist',
                    ),
                ),
                (
                    'tags',
                    taggit.managers.TaggableManager(
                        through='extras.TaggedItem', to='extras.Tag'
                    ),
                ),
            ],
            options={
                'verbose_name': 'AS Path List Entries',
                'ordering': ['as_path_list', 'sequence', 'pk'],
            },
            bases=(netbox.models.deletion.DeleteMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name='aspathlist',
            constraint=models.UniqueConstraint(
                django.db.models.functions.text.Lower('name'),
                django.db.models.functions.text.Lower('description'),
                name='netbox_routing_aspathlist_unique_name',
                violation_error_message='Name must be unique.',
            ),
        ),
        migrations.AddConstraint(
            model_name='aspathlistentry',
            constraint=models.UniqueConstraint(
                fields=('as_path_list', 'sequence'),
                name='netbox_routing_aspathlistentry_unique',
            ),
        ),
    ]
