# Generated by Django 5.2b1 on 2025-07-29 17:18

import django.db.models.deletion
from django.db import migrations, models


def set_peer(apps, schema_editor):
    BGPPeer = apps.get_model('netbox_routing', 'BGPPeer')
    IPAddress = apps.get_model('ipam', 'IPAddress')
    for peer in BGPPeer.objects.all():
        try:
            ip = IPAddress.objects.get(address=peer.peer_ip)
        except IPAddress.DoesNotExist:
            ip = IPAddress.objects.create(address=peer.peer_ip)
        peer.peer = ip
        peer.save()


def unset_peer(apps, schema_editor):
    BGPPeer = apps.get_model('netbox_routing', 'BGPPeer')
    for peer in BGPPeer.objects.all():
        if peer.peer is not None:
            peer.peer_ip = peer.peer.address
            peer.peer = None
            peer.save()


class Migration(migrations.Migration):

    dependencies = [
        ('netbox_routing', '0018_fix_peer_policy_and_session_position'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='bgppeer',
            name='assigned_object_id',
        ),
        migrations.RemoveField(
            model_name='bgppeer',
            name='assigned_object_type',
        ),
        migrations.AddField(
            model_name='bgpaddressfamily',
            name='tenant',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='bgp_address_families',
                to='tenancy.tenant',
            ),
        ),
        migrations.AddField(
            model_name='bgppeer',
            name='bfd',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='bgppeer',
            name='local_as',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='+',
                to='ipam.asn',
            ),
        ),
        migrations.AddField(
            model_name='bgppeer',
            name='password',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='bgppeer',
            name='scope',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='peers',
                to='netbox_routing.bgpscope',
            ),
        ),
        migrations.AddField(
            model_name='bgppeer',
            name='tenant',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='bgp_peers',
                to='tenancy.tenant',
            ),
        ),
        migrations.AddField(
            model_name='bgppeeraddressfamily',
            name='tenant',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='bgp_peer_afs',
                to='tenancy.tenant',
            ),
        ),
        migrations.AddField(
            model_name='bgppeertemplate',
            name='tenant',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='bgp_peer_templates',
                to='tenancy.tenant',
            ),
        ),
        migrations.AddField(
            model_name='bgppolicytemplate',
            name='parents',
            field=models.ManyToManyField(
                related_name='children', to='netbox_routing.bgppolicytemplate'
            ),
        ),
        migrations.AddField(
            model_name='bgppolicytemplate',
            name='tenant',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='bgp_peer_policy_templates',
                to='tenancy.tenant',
            ),
        ),
        migrations.AddField(
            model_name='bgprouter',
            name='tenant',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='bgp_routers',
                to='tenancy.tenant',
            ),
        ),
        migrations.AddField(
            model_name='bgpscope',
            name='tenant',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='bgp_scopes',
                to='tenancy.tenant',
            ),
        ),
        migrations.AddField(
            model_name='bgpsessiontemplate',
            name='tenant',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='bgp_peer_session_templates',
                to='tenancy.tenant',
            ),
        ),
        migrations.RenameField(
            model_name='bgppeer',
            old_name='peer',
            new_name='peer_ip',
        ),
        migrations.AddField(
            model_name='bgppeer',
            name='peer',
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.PROTECT,
                related_name='peers',
                to='ipam.ipaddress',
            ),
        ),
        migrations.RunPython(set_peer, unset_peer),
        migrations.RemoveField(
            model_name='bgppeer',
            name='peer_ip',
        ),
    ]
